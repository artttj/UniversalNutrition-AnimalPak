variables:
- group: Azure Service Principal

pr:
  branches:
    include:
      - master
      - develop
      - feature/update-image-build

trigger:
  batch: true
  branches:
    include:
      - refs/heads/master
      - refs/heads/develop
      - refs/heads/feature/update-image-build
      - refs/tags/*

pool:
  vmImage: "ubuntu-18.04"

stages:
- stage: ContinuousBuild
  jobs:
  - job: Docker_Build
    displayName: "Build and Push Docker images"
    steps:

    # Setup environment
    - task: Docker@2
      displayName: "Login to container registry"
      inputs:
        containerRegistry: "$(IMAGE_REGISTRY_CONNECTION)"
        command: "login"

    - task: DownloadSecureFile@1
      displayName: "Get ssh key"
      name: "github_ssh_key"
      inputs:
        secureFile: "$(GITHUB_SSH_KEY)"

    - task: DownloadSecureFile@1
      displayName: "Download magento authentication file"
      name: "auth_json"
      inputs:
        secureFile: "$(AUTH_JSON)"

    - bash: mv $(Agent.TempDirectory)/$(AUTH_JSON) $(System.DefaultWorkingDirectory)/auth.json
      displayName: "Move auth_file to working directory"

    - bash: set -a || export IMAGE_TAG=`basename $(Build.SourceBranch)`
      displayName: "Set image tags following git tags"
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))

    - bash: set -a || export DB_BRANCH=`basename $(System.PullRequest.TargetBranch)`
      displayName: "Set test db branch for pull request"
      condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))

    # Build steps
    - bash: |
        export SSH_PRIVATE_KEY=`cat $(Agent.TempDirectory)/$(GITHUB_SSH_KEY)`
        "$(System.DefaultWorkingDirectory)/cicd/build.sh"
      displayName: "Build Docker images"

    - bash: ./cicd/test.sh
      displayName: "Test Docker images"
      condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/tags')))
      env:
        AZURE_STORAGE_KEY: $(AZURE_STORAGE_KEY)

    - bash: ./cicd/push.sh
      displayName: "Push Docker images"
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

    - bash: ./cicd/promote.sh
      displayName: "Promote Docker images"
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
